<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.meongnyang.shop.repository.OrderMapper">
    <resultMap id="orderResultMap" type="com.meongnyang.shop.entity.Order" >
        <id property="id" column="o_id"/>
        <result property="userId" column="user_id" />
        <result property="totalPrice" column="total_price" />
        <result property="orderItemCount" column="order_item_count" />
        <result property="orderDate" column="order_date" />
        <result property="orderStatus" column="order_status" />
        <result property="orderName" column="order_name" />
        <result property="zipcode" column="zipcode" />
        <result property="addressDefault" column="address_default" />
        <result property="addressDetail" column="address_detail" />
        <result property="phone" column="phone" />
        <collection property="orderDetails" resultMap="orderDetailResultMap" />
    </resultMap>

    <resultMap id="orderDetailResultMap" type="com.meongnyang.shop.entity.OrderDetail" >
        <id property="id" column="od_id"/>
        <result property="orderId" column="order_id" />
        <result property="productId" column="product_id" />
        <result property="productPrice" column="product_total_price" />
        <result property="productCount" column="product_count" />
        <association property="product" resultMap="productResultMap" />
    </resultMap>

    <resultMap id="productResultMap" type="com.meongnyang.shop.entity.Product" >
        <id property="id" column="o_id"/>
        <result property="productName" column="product_name" />
        <result property="productPrice" column="product_price" />
    </resultMap>

    <resultMap id="userResultMap" type="com.meongnyang.shop.entity.User">
        <id property="id" column="u_id"/>
        <result property="username" column="username" />
        <result property="password" column="password" />
        <result property="name" column="name" />
        <result property="phone" column="phone" />
        <result property="membershipLevelId" column="membership_level_id" />
        <result property="provider" column="provider" />
    </resultMap>

    <delete id="deleteOrderById">
        delete
        from
            order_tb
        where id in
        <foreach item="id" collection="idList" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <delete id="deleteOrderAll">
        delete from order_tb;
    </delete>
    <select id="findOrderAll" resultMap="orderResultMap">
        select
            o.id as o_id,
            o.user_id,
            o.total_price,
            o.order_item_count,
            o.order_date,
            o.order_status,
            o.order_name,
            o.zipcode,
            o.address_default,
            o.address_detail,
            o.phone,
            od.id as od_id,
            od.order_id,
            od.product_id,
            od.product_price as product_total_price,
            od.product_count,
            p.id as p_id,
            p.product_name,
            p.product_price
        from
            order_tb o
            left outer join order_detail_tb od on(o.id = od.order_id)
            left outer join product_tb p on(od.product_id = p.id)

    </select>
    <select id="findOrderByOption" resultMap="orderResultMap">
        select
            o.id as o_id,
            o.user_id,
            o.total_price,
            o.order_item_count,
            o.order_date,
            o.order_status,
            o.order_name,
            o.zipcode,
            o.address_default,
            o.address_detail,
            o.phone,
            od.id as od_id,
            od.order_id,
            od.product_id,
            od.product_price as product_total_price,
            od.product_count,
            p.id as p_id,
            p.product_name,
            p.product_price
        from
            order_tb o
            left outer join order_detail_tb od on(o.id = od.order_id)
            left outer join product_tb p on(od.product_id = p.id)
        where
            1 = 1
        <if test='option.equals("all")'>
            and (
                p.id like concat('%', trim(ifnull(#{searchWord}, '')), "%")
                or p.product_name like concat('%', trim(ifnull(#{searchWord}, '')), "%")
                or pg.category_group_name like concat('%', trim(ifnull(#{searchWord}, '')), "%")
                or c.category_name like concat('%', trim(ifnull(#{searchWord}, '')), "%")
            )
        </if>
        <if test='option.equals("number")'>
            and (
                p.id like concat('%', trim(ifnull(#{searchWord}, '')), "%")
            )
        </if>
        <if test='option.equals("name")'>
            and (
                p.product_name like concat('%', trim(ifnull(#{searchWord}, '')), "%")
            )
        </if>
        <if test='option.equals("date")'>
            and (
                DATE(o.order_date) between #{startDate} and #{endDate}
            )
        </if>
        limit #{startIndex}, #{limit}

    </select>

    <select id="getUserOrders" resultMap="orderResultMap">
        select
            o.id as o_id,
            o.product_id,
            o.user_id,
            p.product_name,
            p.product_price,
            o.total_price,
            o.order_item_count,
            o.order_date,
            o.order_status,
            o.order_name,
            o.address_default,
            o.address_detail
        from
            order_tb o
            left outer join product_tb p on(p.id = o.product_id)
            left outer join user_tb u on(u.id = o.user_id)
        where
            o.user_id = #{userId}
    </select>

    <insert id="postProductsOrder"
            parameterType="list"
            useGeneratedKeys="true"
            keyProperty="id">
        insert into
            order_tb
        values
        <foreach collection="list" item="order" separator=",">
            (0,
            #{order.userId},
            #{order.totalPrice},
            #{order.orderItemCount},
            now(),
            #{order.orderStatus},
            #{order.orderName},
            #{order.zipcode},
            #{order.addressDefault},
            #{order.addressDetail},
            #{order.phone})
        </foreach>
    </insert>
    <delete id="deleteProductsOrder">
        delete
        from
            order_tb
        where
            id in (
                <foreach collection="orderId" item="id" separator=",">
                    #{id}
                </foreach>
            )
    </delete>
    <update id="modifyProductsOrder">
        update
            order_tb
        set
            order_date = now(),
            order_name = #{orderName},
            zipcode = #{zipcode},
            address_default = #{addressDefault},
            address_detail = #{addressDetail},
            phone = #{phone}
        where
            id = #{id}
    </update>
</mapper>


