<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.meongnyang.shop.repository.ProductMapper">
    <resultMap id="productResultMap" type="com.meongnyang.shop.entity.Product">
        <id property="id" column="id"/>
        <result property="productName" column="product_name" />
        <result property="petGroupId" column="pet_group_id" />
        <result property="categoryId" column="category_id" />
        <result property="productPrice" column="product_price" />
        <result property="productPriceDiscount" column="product_price_discount" />
        <result property="productDetail" column="product_detail" />
        <result property="productBrand" column="product_brand" />
        <result property="productModel" column="product_model" />
        <result property="productMemo" column="product_memo" />
        <result property="recommendation" column="recommendation" />
        <association property="petGroup" resultMap="petGroupResultMap" />
        <association property="category" resultMap="categoryResultMap" />
    </resultMap>

    <resultMap id="petGroupResultMap" type="com.meongnyang.shop.entity.PetGroup" >
        <id property="id" column="pg_id" />
        <result property="categoryGroupName" column="category_group_name" />
    </resultMap>

    <resultMap id="categoryResultMap" type="com.meongnyang.shop.entity.Category" >
        <id property="id" column="c_id" />
        <result property="categoryName" column="category_name" />
    </resultMap>

    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into product_tb
        values(default, #{productName}, #{petGroupId}, #{categoryId}, #{productPrice},#{productPriceDiscount}, #{productDetail},
        #{productBrand}, #{productModel}, #{productMemo}, now(), now(), #{recommendation})
    </insert>
    <update id="modifyProduct">
        update product_tb
        set
            product_name = #{productName},
            pet_group_id = #{petGroupId},
            category_id = #{categoryId},
            product_price = #{productPrice},
            product_price_discount = #{productPriceDiscount},
            product_detail = #{productDetail},
            product_brand = #{productBrand},
            product_model = #{productModel},
            product_memo = #{productMemo},
            recommendation = #{recommendation}
        where
            id = #{id}
    </update>
    <delete id="deleteProductAll">
        truncate table product_tb
    </delete>
    <select id="findProductsCount" resultType="java.lang.Integer">
        select
            count(*)
        from
            product_tb
    </select>
    <select id="findProducts" resultMap="productResultMap">
        select
            p.id,
            p.product_name,
            p.pet_group_id,
            p.category_id,
            p.product_price,
            p.product_price_discount,
            p.product_detail,
            p.product_brand,
            p.product_model,
            p.product_memo,
            p.recommendation,
            pg.id as pg_id,
            pg.category_group_name,
            c.id as c_id,
            c.category_name
        from
            product_tb p
            left outer join pet_group_tb pg on(p.pet_group_id = pg.id)
            left outer join category_tb c on(p.category_id = c.id)
    </select>
    <select id="findProductsCountByOption" resultType="java.lang.Integer">
        select
            count(*)
        from
            product_tb
        where
            #{option} = #{searchWord}
    </select>
    <select id="findProductsByOption" resultMap="productResultMap">
        select
            p.id,
            p.product_name,
            p.pet_group_id,
            p.category_id,
            p.product_price,
            p.product_price_discount,
            p.product_detail,
            p.product_brand,
            p.product_model,
            p.product_memo,
            p.recommendation,
            pg.id as pg_id,
            pg.category_group_name,
            c.id as c_id,
            c.category_name
        from
            product_tb p
            left outer join pet_group_tb pg on(p.pet_group_id = pg.id)
            left outer join category_tb c on(p.category_id = c.id)
        where
            CASE
                WHEN #{option} = '상품명' THEN p.product_name LIKE CONCAT('%', #{searchWord}, '%')
                WHEN #{option} = 'product_brand' THEN p.product_brand LIKE CONCAT('%', #{searchWord}, '%')
                WHEN #{option} = 'product_model' THEN p.product_model LIKE CONCAT('%', #{searchWord}, '%')
                ELSE FALSE
            END;
    </select>
    <select id="findProductById" resultType="com.meongnyang.shop.entity.Product">
        select
            id,
            product_name,
            pet_group_id,
            category_id,
            product_price,
            product_price_discount,
            product_detail,
            product_brand,
            product_model,
            product_memo,
            recommendation
        from
            product_tb
        where
            id = #{id}
    </select>
</mapper>


