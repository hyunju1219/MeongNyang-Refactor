<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.meongnyang.shop.repository.StockMapper">
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into stock_tb
        values(default, #{productId}, #{currentStock}, #{expectedStock}, #{arrivalDate}, #{arrivalQuantity}, #{minAlertQuantity}, #{alertSetting}, #{outOfStock})
    </insert>
    <update id="modifyStockByProductId">
        update stock_tb
        set
            current_stock = #{currentStock},
            expected_stock = #{expectedStock},
            arrival_date = #{arrivalDate},
            arrival_quantity = #{arrivalQuantity},
            min_alert_quantity = #{minAlertQuantity},
            alert_setting = #{alertSetting},
            out_of_stock = #{outOfStock}
        where
            product_id = #{productId}
    </update>
    <delete id="deleteStockByProductId">
        delete
        from
            stock_tb
        where
            product_id = #{productId}
    </delete>
    <delete id="deleteStockAll">
        truncate table stock_tb;
    </delete>
    <select id="findStockAll" resultType="com.meongnyang.shop.entity.Stock">
        select
            s.id,
            s.product_id as productId,
            p.product_name as productName,
            s.current_stock as currentStock,
            s.expected_stock as expectedStock,
            s.arrival_date as arrivalDate,
            s.arrival_quantity as arrivalQuantity,
            s.min_alert_quantity as minAlertQuantity,
            s.alert_setting as alertSetting,
            s.out_of_stock as outOfStock
        from
            stock_tb s
            left outer join product_tb p on(s.product_id = p.id)
    </select>
</mapper>


